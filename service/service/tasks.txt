Нам необходимо определить API для нашей медиаплатформы, который позволяет отображать содержимое в соответствии с иерархической структурой.
Содержание может содержать файлы (такие как видео, pdf или текст), набор произвольных метаданных,
связанных с содержанием ( содержание, авторы, жанр и т.д.) и значение рейтинга, которое представляет собой десятичное число от 0 до 10.
См. следующий пример контента, соответствующего эпизоду телесериала.
Мы организуем содержимое в платформе с помощью каналов. Канал хранит иерархическую структуру и имеет название, язык и картинку.
Канал может содержать ссылки либо на другие каналы, либо на содержимое. 
Если канал имеет подканалы, он не может иметь под собой содержимое, и наоборот, если канал имеет содержимое,
он не может иметь под собой подканалы. 
Канал должен иметь по крайней мере один контент или один подканал. 
Подканалы канала также могут иметь под собой другие подканалы.
 
 На следующих изображениях вы можете увидеть пример каналов, которые могут быть предоставлены вашим api .

Рейтинг канала является средним значением рейтингов всех каналов, находящихся под ним, если канал не имеет подканалов,
то его рейтинг является средним значением рейтингов его содержимого.
Если канал не имеет содержимого, он не влияет на рейтинг своего родителя, так как его значение не определено.
Каналы не могут хранить этот рейтинг напрямую (потому что их структура может измениться в любой момент),
поэтому нам нужен способ вычислить его из структуры содержимого, лежащей в их основе.

Требования, которые мы предъявляем к этому тесту, следующие:
● Создайте проект Django для определения API
● Определить модели для представления структуры, описанной выше
● Предоставить способ эффективного подсчета рейтингов каждого канала и экспортировать их в csv файл, отсортированный по рейтингу.
их в файл csv, отсортированный по рейтингу (т.е. каналы с самым высоким рейтингом сверху). Файл
csv содержит два столбца: <название канала>, <средний рейтинг>.
● Создайте конечные точки для получения каналов, их подканалов и их содержимого.
● Добавьте модульные тесты для тестирования алгоритма рейтинга каналов
● Используйте контейнеры для запуска сервисов.
Получите бонусные баллы за:
● Добавление групп к каналам. Учитывая, что каждый канал может принадлежать
нескольким группам.
○ Разрешить фильтрацию по группам в Channels API.
Примечание: Учитывайте, что набор групп любого канала должен быть включен в набор групп его родителя.
● Высокое тестовое покрытие с помощью модульных тестов
● Добавление аннотаций типов (бонус за прохождение строгой проверки типов в mypy)
● Добавление CI/CD (предпочтительнее Gitlab CI, но вы можете использовать что угодно)
● Использование базы данных, отличной от SQLite.
Вы можете использовать любые библиотеки, СУБД или инструменты, необходимые вам для выполнения задачи.
Мы рекомендуем вам создать файл readme с некоторыми пояснениями о вашем решении.